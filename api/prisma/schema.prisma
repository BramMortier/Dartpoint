generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          Int     @id @default(autoincrement())
    dartpointId String  @unique
    email       String  @unique
    displayName String
    password    String
    country     String?
    isGuest     Boolean @default(false)

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    ownedBoards Board[]

    savedBoards BoardUsers[]

    friends   UserFriends[] @relation("friends")
    friendsOf UserFriends[] @relation("friends-of")

    @@map("users")
}

model Board {
    id        Int     @id @default(autoincrement())
    ownerId   Int
    name      String
    code      String  @unique
    isVisible Boolean @default(false)
    country   String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    owner User         @relation(fields: [ownerId], references: [id])
    users BoardUsers[]

    @@map("boards")
}

model BoardUsers {
    user    User  @relation(fields: [userId], references: [id])
    userId  Int
    board   Board @relation(fields: [boardId], references: [id])
    boardId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@id([userId, boardId])
    @@map("board_users")
}

model UserFriends {
    user     User @relation("friends", fields: [userId], references: [id])
    userId   Int
    friend   User @relation("friends-of", fields: [friendId], references: [id])
    friendId Int

    isAccepted Boolean

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    @@id([userId, friendId])
    @@map("user_friends")
}
